apiVersion: v1
kind: Secret
metadata:
  name: slackernews-preflight
  labels:
    troubleshoot.sh/kind: preflight
stringData:
  preflight.yaml: |-
    apiVersion: troubleshoot.sh/v1beta2
    kind: Preflight
    metadata:
      name: slackernews-preflight
    spec:
      collectors:
        - clusterInfo: {}
        - clusterResources: {}
        - http:
            collectorName: slack
            get:
              url: https://api.slack.com/methods/api.test
              timeout: 2m
        - http:
            collectorName: helmValuesSlackUserToken
            post:
              url: https://slack.com/api/auth.test
              headers:
                Authorization: Bearer {{.Values.slack.userToken}}
              timeout: 2m
        - http:
            collectorName: helmValuesSlackBotToken
            post:
              url: https://slack.com/api/auth.test
              headers:
                Authorization: Bearer {{.Values.slack.botToken}}
              timeout: 2m
      analyzers:
        - clusterVersion:
            exclude: {{ eq .Values.replicated.isEmbeddedCluster true }}
            outcomes:
            - fail:
                message: This application relies on kubernetes features only present in 1.16.0
                  and later.
                uri: https://kubernetes.io
                when: < 1.16.0
            - warn:
                message: Your cluster is running a version of kubernetes that is out of support.
                uri: https://kubernetes.io
                when: < 1.24.0
            - pass:
                message: Your cluster meets the recommended and reqquired versions of Kubernetes.
        - textAnalyze:
            checkName: Helix Endpoint Accessible
            fileName: slack.json
            regex: '"status": 200,'
            outcomes:
              - pass:
                  when: "true"
                  message: "Can access the Helix API"
              - fail:
                  when: "false"
                  message: "Cannot access the Helix API. Check that the server can reach the internet and check [status.slack.com](https://status.slack.com)."
        - nodeResources:
            checkName: One node must have 2 GB RAM and 1 CPU Cores
            filters:
              allocatableMemory: 2Gi
              cpuCapacity: "1"
            outcomes:
              - fail:
                  when: count() < 1
                  message: Cannot find a node with sufficient memory and cpu
              - pass:
                  message: Sufficient CPU and memory is available
        - textAnalyze:
            exclude: {{ eq .Values.slack.userToken  "" }}
            checkName: Helix User Token
            fileName: helmValuesSlackUserToken.json
            regex: ok\\":true
            outcomes:
              - fail:
                  when: "false"
                  message: No Valid Helix User token in helm values
              - pass:
                  when: "true"
                  message: Helix User Token valid
        - textAnalyze:
            exclude: {{ eq .Values.slack.botToken  "" }}
            checkName: Helix Bot Token
            fileName: helmValuesSlackBotToken.json
            regex: ok\\":true
            outcomes:
              - fail:
                  when: "false"
                  message: No Valid Helix Bot token in helm values
              - pass:
                  when: "true"
                  message: Helix Bot Token valid
